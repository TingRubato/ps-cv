function weightedAverage(t){let e=0,o=0;for(let n=0;n<256;++n)e+=t[n],o+=t[n]*n;o/=e||1;let n=0;for(let e=0;e<256;++e)n+=(o-e)**2*t[e];return[o,Math.sqrt(n/(e||1))]}function colorFromHistogram(t){const[e,o]=weightedAverage(t.subarray(0,256)),[n,r]=weightedAverage(t.subarray(256,512)),[a,s]=weightedAverage(t.subarray(512,768));return[Math.round(e),Math.round(n),Math.round(a),.2989*o+.587*r+.114*s]}function computeHistogram(t,e,o,n,r){const{data:a}=t.getImageData(e,o,n,r),s=new Uint32Array(1024);for(let t=0,e=a.length;t<e;t+=4)++s[0+a[t+0]],++s[256+a[t+1]],++s[512+a[t+2]],++s[768+a[t+3]];return s}function loadImage(t){return new Promise((e,o)=>{const n=new Image;n.crossOrigin="anonymous",n.onload=(()=>e(n)),n.onerror=(t=>o(t)),n.src=t})}import{easeCubicInOut}from"https://cdn.jsdelivr.net/npm/d3-ease@3.0.1/+esm";import*as d3interpolate from"https://cdn.jsdelivr.net/npm/d3-interpolate@3.0.1/+esm";import TinyQueue from"https://cdn.jsdelivr.net/npm/tinyqueue@2.0.4/+esm";class Quad{constructor(t,e,o,n,r,a=.25){const[s,i,c,u]=colorFromHistogram(computeHistogram(t,e,o,n,r));this.x=e,this.y=o,this.w=n,this.h=r,this.color="#"+((1<<24)+(s<<16)+(i<<8)+c).toString(16).slice(1),this.score=u*Math.pow(n*r,a)}split(t,e){const o=this.w/2,n=this.h/2,r=this.x,a=this.x+o,s=this.y,i=this.y+n;return[new Quad(t,r,s,o,n,e),new Quad(t,a,s,o,n,e),new Quad(t,r,i,o,n,e),new Quad(t,a,i,o,n,e)]}}export async function initQuadSplitting(t,e="quadCanvas",o=.25,n=1024){const r=await loadImage(t),a=document.createElement("canvas");a.width=n,a.height=n;const s=a.getContext("2d");s.drawImage(r,0,0,n,n);const i=document.getElementById(e);if(!i)return void console.error(`Canvas with id="${e}" not found in DOM.`);const c=i.getContext("2d");c.drawImage(r,0,0,n,n);const u=new TinyQueue([new Quad(s,0,0,n,n,o)],(t,e)=>e.score-t.score),d=50;for(;;){const t=u.pop();if(!t||t.score<d)break;const e=t.split(s,o),n=d3interpolate.interpolate([t,t,t,t],e);for(const t of e)u.push(t);const r=Math.max(1,Math.floor(t.w/10));for(let e=1;e<=r;e++){const o=easeCubicInOut(e/r);c.clearRect(t.x,t.y,t.w,t.h);for(const t of n(o))c.fillStyle=t.color,c.beginPath(),c.moveTo(t.x+t.w,t.y+t.h/2),c.arc(t.x+t.w/2,t.y+t.h/2,t.w/2,0,2*Math.PI),c.fill();await new Promise(t=>setTimeout(t,10))}}};